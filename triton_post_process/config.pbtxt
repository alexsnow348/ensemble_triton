name: "triton_post_process"
backend: "python"
parameters: [{
  key: "EXECUTION_ENV_PATH",
  value: {string_value: "/model_repo/triton_post_process/triton_python.tar.gz"}
},
{
  key: "LABEL_MAP_PATH",
  value: {string_value: "/model_repo/triton_post_process/label_map.json"}
},
{
  key: "THRESHOLD", 
  value: {string_value: "0.3"}
},
{
  key: "IOUTHRESHOLD",
  value: {string_value: "0.4"}
}
]

input [   
    {
      name: "input_tensor"
      data_type: TYPE_UINT8
      dims: [1, -1, -1, 3]
    },
    {
      name: "raw_detection_boxes"
      data_type: TYPE_FP32
      dims: [1, 300, 4]
    },
	{
	name: "raw_detection_scores"
    data_type: TYPE_FP32
    dims: [1, 300, 9]
	},
	{
	name: "num_detections"
    data_type: TYPE_FP32
    dims: [1]
	},
	{
	name: "detection_classes"
    data_type: TYPE_FP32
    dims: [1, 300]
	},
	{
	name: "detection_multiclass_scores"
    data_type: TYPE_FP32
    dims: [1, 300, 9]
	},
	{
	name: "detection_boxes"
    data_type: TYPE_FP32
    dims: [1, 300, 4]
	},
	{
	name: "detection_scores"
    data_type: TYPE_FP32
    dims: [1, 300]
	},
	{
	name: "detection_anchor_indices"
    data_type: TYPE_FP32
    dims: [1, 300]
	}
]

output [
    {
    name: "bounding_boxes"
    data_type: TYPE_FP32
    dims: [-1, 4]
    },
    {
    name: "classes_names"
    data_type: TYPE_STRING
    dims: [1, -1]
    }
]



